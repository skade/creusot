module ModulePaths
  use Ref
  use mach.int.Int
  use mach.int.Int32
  use mach.int.Int64
  use mach.int.UInt32
  use mach.int.UInt64
  use string.Char
  use floating_point.Single
  use floating_point.Double
  use prelude.Prelude

  scope Type
  type a_t  = 
    | A_T(uint32)
    
  predicate drop_a_t (self : a_t) = 
    let A_T(a) = self in drop_uint a
  type b_c_t  = 
    | B_C_T(a_t)
    
  predicate drop_b_c_t (self : b_c_t) = 
    let B_C_T(a) = self in drop_a_t a
  type s  = 
    | S(a_t)
    
  predicate drop_s (self : s) = 
    let S(a) = self in drop_a_t a
  type b_o  = 
    | B_O(uint32)
    
  predicate drop_b_o (self : b_o) = 
    let B_O(a) = self in drop_uint a
  end
  let rec cfg main () : ()
    =
  var _0 : ();
  {
    goto BB0
  }
  BB0 {
    _0 <- ();
    return _0
  }
  
end
